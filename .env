##### I) API Keys
GOOGLE_API_KEY=[KEY GELÖSCHT]

##### II) Container

# 1) Chroma-Server (Bind-Adresse im Container)
CHROMA_SERVER_HOST=chroma
CHROMA_SERVER_PORT=8000
CHROMA_URL=http://chroma:8000

# 1b) Chroma-Client (von python_app aus)
CHROMA_HOST=chroma
CHROMA_PORT=8000

# 2) Ollama (läuft auf dem Host)
OLLAMA_URL=http://host.docker.internal:11434

# 3) LiteLLM (optional, nur wenn Service aktiv)
LITELLM_BASE_URL=http://litellm:4000

##### III) Persistenz (Host-Pfade)
DATA_ROOT=./data
CHROMA_DATA_DIR=${DATA_ROOT}/chroma
UPLOADS_DIR=${DATA_ROOT}/uploads
APP_STATE_DIR=${DATA_ROOT}/app_state
LOGS_DIR=${DATA_ROOT}/logs
HF_CACHE_DIR=${DATA_ROOT}/cache/hf
TMP_DIR=${DATA_ROOT}/tmp
CONFIG_DIR=${DATA_ROOT}/config

##### IV) Performance & Laufzeit
# Embeddings
EMBED_BATCH_SIZE=128
EMBED_FP16=1        # 1=FP16 (empfohlen mit RTX 4060); 0=FP32

# Ruhigeres Threading & Telemetrie aus
TOKENIZERS_PARALLELISM=false
OMP_NUM_THREADS=1
HF_HUB_DISABLE_TELEMETRY=1

# GPU-Auswahl (bei mehreren GPUs anpassen)
CUDA_VISIBLE_DEVICES=0

# PyTorch Speicher-Allocator (Fragmentierung reduzieren)
PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:128

# Optional: Log-Level der App
# LOG_LEVEL=INFO
